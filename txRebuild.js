/*
 * @Author: liulin blue-sky-dl5@163.com
 * @Date: 2025-08-27 16:15:31
 * @LastEditors: liulin blue-sky-dl5@163.com
 * @LastEditTime: 2025-08-28 16:27:38
 * @FilePath: /crosschain-tools/txRebuild.js
 * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE
 */
const CardanoWasm = require('@emurgo/cardano-serialization-lib-nodejs');

// const ogmiosUtils = require('./ogmios-utils2');
const ogmiosUtils = require("crosschain-sdk-1-1/ogmios-utils2");;
// const fs = require('fs');
// const path = require('path');

const witnessFiles = [
    'a1008182582049d61b3a14911aee3c586d1fafd033ea6067194319665b659041c43206f5172e58407d362f59f6edb01263cc0ab7568e1a6cce95cd98c409031a23c7578e4ff5be99dcde07bc6b0fbca8cdf88d2f179fb4d1f384c53aa78a9d8aa462fb3da35aaf04',
    'a10081825820b9e83787e7fc04aa056a85b7b95e8a9e50d791b433ea56518842ce7c3ab0742b5840c05800009af8b2702100f85480c0abf3e69895e6d381bde2401e8c6ba9539021093804def94eddcdfe1aa1b5004403e973c8731639fe29ae8f8718e892e55e04',
    'a10081825820e27f253c9aeca3122ac3821130c1f3ed7437bc74678a45f0e0414fad2dee629a5840bfddfaac78449870b8ae35f54dea4aa713af870e4e7d3afd9c393a587223d3d3834405eacde752762cfc385bb6db1081615cce50e8de62274e0801298d190b00'
]

const txCbor = '84aa008282582094e31fbd2896337cf079a0128bc78215ba5dd68f57678beb60279b07b17835790782582094e31fbd2896337cf079a0128bc78215ba5dd68f57678beb60279b07b178357908018ca300583931bb70429f5b78ce50a31cb8c3b1a2d1b4164feb227ee653e6a35f74de259b187aa287258c0b95e636a472391282dedb2eb17b8bf321bb14f101821a00129c92a1581c992eefaec3fed37e3cdd4e9063721f0f2e231d61934a9f538b492f5ca14a4d436865636b436f696e01028201d81845d8799f01ffa300583931bb70429f5b78ce50a31cb8c3b1a2d1b4164feb227ee653e6a35f74de259b187aa287258c0b95e636a472391282dedb2eb17b8bf321bb14f101821a00129c92a1581c992eefaec3fed37e3cdd4e9063721f0f2e231d61934a9f538b492f5ca14a4d436865636b436f696e01028201d81845d8799f01ffa300583931bb70429f5b78ce50a31cb8c3b1a2d1b4164feb227ee653e6a35f74de259b187aa287258c0b95e636a472391282dedb2eb17b8bf321bb14f101821a00129c92a1581c992eefaec3fed37e3cdd4e9063721f0f2e231d61934a9f538b492f5ca14a4d436865636b436f696e01028201d81845d8799f01ffa300583931bb70429f5b78ce50a31cb8c3b1a2d1b4164feb227ee653e6a35f74de259b187aa287258c0b95e636a472391282dedb2eb17b8bf321bb14f101821a00129c92a1581c992eefaec3fed37e3cdd4e9063721f0f2e231d61934a9f538b492f5ca14a4d436865636b436f696e01028201d81845d8799f01ffa300583931bb70429f5b78ce50a31cb8c3b1a2d1b4164feb227ee653e6a35f74de259b187aa287258c0b95e636a472391282dedb2eb17b8bf321bb14f101821a00129c92a1581c992eefaec3fed37e3cdd4e9063721f0f2e231d61934a9f538b492f5ca14a4d436865636b436f696e01028201d81845d8799f01ffa300583931bb70429f5b78ce50a31cb8c3b1a2d1b4164feb227ee653e6a35f74de259b187aa287258c0b95e636a472391282dedb2eb17b8bf321bb14f101821a00129c92a1581c992eefaec3fed37e3cdd4e9063721f0f2e231d61934a9f538b492f5ca14a4d436865636b436f696e01028201d81845d8799f01ffa300583931bb70429f5b78ce50a31cb8c3b1a2d1b4164feb227ee653e6a35f74de259b187aa287258c0b95e636a472391282dedb2eb17b8bf321bb14f101821a00129c92a1581c992eefaec3fed37e3cdd4e9063721f0f2e231d61934a9f538b492f5ca14a4d436865636b436f696e01028201d81845d8799f01ffa300583931bb70429f5b78ce50a31cb8c3b1a2d1b4164feb227ee653e6a35f74de259b187aa287258c0b95e636a472391282dedb2eb17b8bf321bb14f101821a00129c92a1581c992eefaec3fed37e3cdd4e9063721f0f2e231d61934a9f538b492f5ca14a4d436865636b436f696e01028201d81845d8799f01ffa300583931bb70429f5b78ce50a31cb8c3b1a2d1b4164feb227ee653e6a35f74de259b187aa287258c0b95e636a472391282dedb2eb17b8bf321bb14f101821a00129c92a1581c992eefaec3fed37e3cdd4e9063721f0f2e231d61934a9f538b492f5ca14a4d436865636b436f696e01028201d81845d8799f01ffa300583931bb70429f5b78ce50a31cb8c3b1a2d1b4164feb227ee653e6a35f74de259b187aa287258c0b95e636a472391282dedb2eb17b8bf321bb14f101821a00129c92a1581c992eefaec3fed37e3cdd4e9063721f0f2e231d61934a9f538b492f5ca14a4d436865636b436f696e01028201d81845d8799f01ffa300581d712cbf787c0586588393ee0a284760c25db4f139557e113d897af4322601821a001af6bca1581c53cc8f42ca118ffa3fe0f66cf82d973b73913e0ff25edb2e5e1371afa14c41646d696e4e4654436f696e01028201d818589dd8799f9f581ce401804f5a9822508cf9cee59248e0d977778e7c001ce8a7d81f50be581cfd51889aa0361c0e602796a7aa571629f7a972b2fc7945d424e6ec21581c1c4e9bc39406993cca989710d28a3652ea98a494885c24a2ab2f9dac581cffb76874e2a4bca1130c34fd501dca83c27aca1136130c76e211362b581cbd549d0bf4d290c1c41a21d7622334878b0e27ff99d68588fea81e6eff03ff82583901e401804f5a9822508cf9cee59248e0d977778e7c001ce8a7d81f50befddc71f25b5b469185ba09e60f78200d5be05ff4dfa1e9c772266195821a0bc8c2aba1581c25c5de5f5b286073c593edfd77b48abc7a48e5a4f3d4cd9d428ff935a144555344541a02faf080021a0011df7309a1581c992eefaec3fed37e3cdd4e9063721f0f2e231d61934a9f538b492f5ca14a4d436865636b436f696e0a0b5820aa5c2f4925fea2c1d49db762ef38506f77667b1e1e69e02333b55ec0b14ecb960d818258208f7c78d1e03e4e443486ad338b6f7e2bc500c9779c2490c9ddcddb5018cd7925000e83581ce401804f5a9822508cf9cee59248e0d977778e7c001ce8a7d81f50be581c1c4e9bc39406993cca989710d28a3652ea98a494885c24a2ab2f9dac581cffb76874e2a4bca1130c34fd501dca83c27aca1136130c76e211362b1082583901e401804f5a9822508cf9cee59248e0d977778e7c001ce8a7d81f50befddc71f25b5b469185ba09e60f78200d5be05ff4dfa1e9c7722661951a0028ca3a111a0023810612838258207757cb6c24ce5bf062e756a97991bea3da1d65d028fa5926b724e7bdc6fc216b00825820be8d471f5ec6aef8d9e1f18afceed18e314361db7998d55bbe1543f3fe00ac30008258207ea18b6769ebefb006d46e75e726f6687d17675402d08b0134123caab383b74000a10582840000d87980821a00397fd21a3171b053840100d87980821a006fb1c61a53abf20cf5f6'


const txdraft = CardanoWasm.Transaction.from_hex(txCbor);
const finalWitnessSet = CardanoWasm.TransactionWitnessSet.from_hex(txdraft.witness_set().to_hex());
const finalVkeywitnesses = CardanoWasm.Vkeywitnesses.new();
for (let i = 0; i < witnessFiles.length; i++) {
    // const file = witnessFiles[i];
    // const witenessCbor = fs.readFileSync(path.join(__dirname,'/txdata',file)).toString();

    const witnessCbor = witnessFiles[i];

    const witnessSet = CardanoWasm.TransactionWitnessSet.from_hex(witnessCbor);
    for (let index = 0; index < witnessSet.vkeys().len(); index++) {
        const vkeywitness = witnessSet.vkeys().get(index);
        finalVkeywitnesses.add(CardanoWasm.Vkeywitness.from_hex(vkeywitness.to_hex()))
    }
}

finalWitnessSet.set_vkeys(finalVkeywitnesses)

const finallySignedTx = CardanoWasm.Transaction.new(txdraft.body(), finalWitnessSet)

console.log(finallySignedTx.to_json());
console.log(finallySignedTx.to_hex());

const mainnetUrl = 'https://nodes.wandevs.org/cardano'
const testnet = 'https://nodes-testnet.wandevs.org/cardano'
ogmiosUtils.init_ogmios(mainnetUrl).then(() => {


    ogmiosUtils.evaluate(finallySignedTx.to_hex()).then(exunit => {
        console.log(exunit);

        ogmiosUtils.submitTx(finallySignedTx).then(txHash => {

            console.log('submit successfully:', txHash);
        })
    }).catch(e => {
        console.error(e);
    })

});
